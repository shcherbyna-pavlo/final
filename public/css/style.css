/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
*,
*:after,
*:before {
  box-sizing: border-box;
}

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers.
     */
body {
  margin: 0;
}

/**
     * Render the `main` element consistently in IE.
     */
main {
  display: block;
}

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
       ========================================================================== */
/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
       ========================================================================== */
/**
     * Remove the gray background on active links in IE 10.
     */
a {
  background-color: transparent;
}

/**
     * 1. Remove the bottom border in Chrome 57-
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%;
}

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
       ========================================================================== */
/**
     * Remove the border on images inside links in IE 10.
     */
img {
  border-style: none;
}

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers.
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
     * Show the overflow in IE.
     * 1. Show the overflow in Edge.
     */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
     * Correct the inability to style clickable types in iOS and Safari.
     */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
     * Remove the inner border and padding in Firefox.
     */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
     * Restore the focus styles unset by the previous rule.
     */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
     * Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  vertical-align: baseline;
}

/**
     * Remove the default vertical scrollbar in IE 10+.
     */
textarea {
  overflow: auto;
}

/**
     * 1. Add the correct box sizing in IE 10.
     * 2. Remove the padding in IE 10.
     */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
     * Remove the inner padding in Chrome and Safari on macOS.
     */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE 10+, and Firefox.
     */
details {
  display: block;
}

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item;
}

/* Misc
       ========================================================================== */
/**
     * Add the correct display in IE 10+.
     */
template {
  display: none;
}

/**
     * Add the correct display in IE 10.
     */
[hidden] {
  display: none;
}

@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-Bold.woff2") format("woff2"), url("../fonts/Montserrat-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-Regular.woff2") format("woff2"), url("../fonts/Montserrat-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "icomoon";
  src: url("../fonts/icomoon.eot?v7or71");
  src: url("../fonts/icomoon.eot?v7or71#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?v7or71") format("truetype"), url("../fonts/icomoon.woff?v7or71") format("woff"), url("../fonts/icomoon.svg?v7or71#icomoon") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}
[class^=icon-], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: "icomoon" !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-Arrow:before {
  content: "\e900";
}

.icon-Scroll:before {
  content: "\e901";
}

.icon-fb:before {
  content: "\e902";
  color: #fff;
}

.btn {
  font-size: 42px;
}

body {
  font-family: "Montserrat";
  font-weight: 400;
  font-size: 16px;
  line-height: 26px;
}

.container {
  max-width: 1560px;
  margin: 0 auto;
  padding: 0 60px;
}

img {
  vertical-align: top;
  width: 100%;
  height: auto;
}

#wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  overflow: hidden;
  width: 100%;
  position: relative;
}

main {
  flex-grow: 1;
}

a {
  text-decoration: none;
}

p {
  margin: 0;
  padding: 0;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

h2,
h2,
h4 {
  font-weight: 700;
  margin: 0;
}

h2 {
  font-size: 30px;
  line-height: 37px;
}

h3 {
  font-size: 22px;
  line-height: 27px;
}

h4 {
  font-size: 16px;
  line-height: 20px;
}

.hero {
  font-weight: 700;
  font-size: 38px;
  line-height: 46px;
}

.h3-caps {
  font-weight: 700;
  font-size: 14px;
  line-height: 17px;
  letter-spacing: 1px;
  text-transform: uppercase;
}

#header {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  color: #ffffff;
  padding: 50px 0;
}

.head {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
.head a {
  position: relative;
  color: #ffffff;
  z-index: 3;
  padding: 5px 7px;
}
.head a:active {
  background: #F0145A;
  border-radius: 8px;
}
.head a:focus {
  background: #F0145A;
  border-radius: 8px;
}
.head__logo {
  max-width: 130px;
}
.head__text {
  display: flex;
  flex-direction: column;
  font-weight: 700;
  line-height: 20px;
}
.head__info {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.head__info-lang {
  font-size: 12px;
  line-height: 15px;
  letter-spacing: 1px;
}
.head__fw-reg {
  font-weight: 400;
}
.head__fb {
  font-size: 24px;
}
.head__point {
  display: inline-block;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: #E6E6F0;
  margin: 0 6px 1px;
}
.head__menu {
  display: flex;
  flex-direction: row;
  margin: 16px -15px 0 0;
  justify-content: end;
}
.head__menu-list {
  padding-right: 15px;
}

.main-body {
  background: linear-gradient(228.57deg, #323264 11.93%, #323264 57.17%, #643E72 87.46%);
  max-width: 100%;
}

.symbol {
  display: flex;
  justify-content: center;
  position: relative;
  color: #ffffff;
}
.symbol__text-pos {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.symbol__btn-pos {
  position: absolute;
  bottom: 30px;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 3;
}

.line2 {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin: 60px 0;
}
.line2__list {
  padding: 15px 60px 15px 0;
  border-right: 4px solid rgba(255, 255, 255, 0.3);
  text-align: end;
}
.line2__link {
  color: #B3B3BA;
}
.line2__link:hover {
  color: #F0145A;
}
.line2__link:active {
  background-image: linear-gradient(90.13deg, #F0145A 0.84%, #EF8080 99.96%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
.line2__list-li {
  padding-bottom: 30px;
}
.line2__list-li:last-child {
  padding: 0;
}
.line2__block-text {
  position: relative;
  max-width: 641px;
  padding-left: 60px;
  text-align: start;
  color: #ffffff;
  font-size: 19px;
  line-height: 30px;
  display: none;
}
.line2__block-text:before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 50px;
  background: rebeccapurple;
}
.line2__block-text h2 {
  padding-bottom: 30px;
}
.line2__block-text:target {
  display: block;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
